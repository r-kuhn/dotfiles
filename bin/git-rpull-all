#! /bin/bash
SUBDIRECTORY_OK=true
OPTIONS_SPEC="\
git rpull-all [options]

Bring all local tracking branches up-to-date. Its the same as using
'git rpull' on each branch, but the origin fetch is only done once.

This lets you bring all your working branches up to date with the
remote quickly.

--
fetch         Fetch from the upstream remote. This is the default, use --no-fetch to disable it.
q,quiet       Pass --quiet to all fetch, pull, and checkout commands.
I,ignore=GLOB A glob of branch names to ignore (default: attic/*)
"
. git-sh-setup

set -euo pipefail
quiet=
fetch=true
ignore='attic/*'
while [[ $1 != -- ]] ; do
    case "$1" in
        --fetch)
            fetch=true
            ;;
        --no-fetch)
            fetch=false
            ;;
        --no-quiet)
            [[ $quiet != -v ]] || set -x
            quiet=-v
            GIT_QUIET=
            ;;
        -q)
            quiet=-q
            GIT_QUIET=-q
            ;;
        --no-ignore)
            ignore=
            ;;
        -I)
            ignore="$2"
            shift
            ;;
    esac
    shift
done
shift

[[ $# == 0 ]] || die "unexpected arguments: $*"

require_clean_work_tree "Recursivly pull changes" "Commit or stash and try again"

# Setup colors
ncolors=$(tput colors)
if [[ -n $ncolors ]] && (( $ncolors >= 8 )); then
    green="$(tput setaf 2)"
    normal="$(tput sgr0)"
else
    green=
    normal=
fi

# Get every branch and its upstream
git for-each-ref --format '%(upstream:short) %(refname:short)' refs/heads |
    # Remove branches without an upstream
    grep -v -e '^ ' |
    # Pre-sort to stabalize
    sort |
    # Topologically sort the branches
    tsort |
    # Now pull each of the branches
    while read BRANCH ; do
        # If the branch matches the ignore pattern, continue
        if [[ $BRANCH == $ignore ]] ; then
            continue
        fi
        # Get the full refname for this branch
        FULL=$(git rev-parse --symbolic-full-name $BRANCH)
        # If its not in refs/heads/ move on (this is because the remotes also appear in this list,
        # the pull takes care of them.
        if [[ $FULL != refs/heads/* ]] ; then
            continue
        fi
        echo "${green}${BRANCH}${normal}"
        git checkout --quiet $BRANCH
        if $fetch || [[ $(git config branch.$BRANCH.remote) == . ]] ; then
            git pull $quiet
        fi
    done
